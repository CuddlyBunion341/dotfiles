name: MacOS Dotfiles Setup

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'nvim/**'
      - '.zshrc'
      - 'bin/**'
      - 'Brewfile'
      - '.github/workflows/macos-setup.yml'

jobs:
  macos-setup:
    runs-on: macos-14-arm64
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for potential git-based configurations
    
    - name: Setup Homebrew
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo "/opt/homebrew/bin" >> $GITHUB_PATH
        brew update
    
    - name: Setup asdf
      uses: asdf-vm/actions/setup@v3
    
    - name: Install asdf plugins
      run: |
        asdf plugin add nodejs || true
        asdf plugin add ruby || true
    
    - name: Install versions from .tool-versions
      run: asdf install
    
    - name: Install dependencies
      run: |
        brew bundle install || true
        
    - name: Make scripts executable
      run: |
        chmod +x ./bin/*
        find ./nvim/.config/nvim/bin -type f -exec chmod +x {} \; || true
    
    - name: Symlink dotfiles
      run: |
        # Create necessary directories
        mkdir -p ~/.config
        
        # Symlink common configurations
        for file in $(find . -maxdepth 1 -name ".*" -not -name ".git" -not -name ".github" -not -name ".DS_Store"); do
          ln -sfn "$PWD/$file" "$HOME/$(basename $file)"
        done
        
        # Symlink .config directory contents
        for dir in */; do
          if [ -d "${dir}.config" ]; then
            for config in "${dir}.config/"*; do
              if [ -d "$config" ]; then
                mkdir -p "$HOME/.config"
                ln -sfn "$PWD/$config" "$HOME/.config/$(basename $config)"
              fi
            done
          elif [ "${dir%/}" != ".git" ] && [ "${dir%/}" != ".github" ] && [ "${dir%/}" != "bin" ] && [ "${dir%/}" != "scripts" ] && [ "${dir%/}" != "nixos" ]; then
            ln -sfn "$PWD/${dir%/}" "$HOME/.config/${dir%/}"
          fi
        done
    
    - name: Setup Oh My Zsh
      run: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        ./bin/setup_zsh_plugins
    
    - name: Setup Neovim
      run: |
        brew install neovim
        nvim --version
        
        if [ -d "./nvim/.config/nvim" ]; then
          cd ./nvim/.config/nvim
          ./bin/setup
        fi
    
    - name: Verify Neovim setup
      run: |
        nvim --headless "+Lazy sync" +qall
        [ -d ~/.local/share/nvim/lazy ] && echo "✓ Lazy.nvim is installed" || exit 1
        cd ~/.config/nvim && ./bin/check || true
        cd ~/.config/nvim && ./bin/lint
    
    - name: Verify zsh setup
      run: |
        zsh -c 'source ~/.zshrc && echo "✓ ZSH loaded successfully"'
    
    - name: Check for common issues
      run: |
        # Check if important dotfiles are properly linked
        test -L ~/.zshrc && echo "✓ .zshrc is linked" || exit 1
        test -L ~/.config/nvim && echo "✓ nvim config is linked" || exit 1
        
        # Check if key tools are available
        which nvim && echo "✓ neovim is available" || exit 1
        which brew && echo "✓ homebrew is available" || exit 1
        which git && echo "✓ git is available" || exit 1 