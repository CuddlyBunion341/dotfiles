name: Neovim Checks

on:
  push:
    branches: [ main ]
    #paths:
    #  - '.config/nvim/**'
  pull_request:
    branches: [ main ]
    # paths:
    #   - '.config/nvim/**'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Restore Homebrew and downloads cache
      uses: actions/cache@v4
      with:
        path: |
          /home/linuxbrew/.linuxbrew
          /home/linuxbrew/.cache/Homebrew
        key: linuxbrew-${{ runner.os }}-${{ hashFiles('Brewfile') }}
        restore-keys: |
          linuxbrew-${{ runner.os }}-

    - name: Install Homebrew if missing
      run: |
        if [ ! -x "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        fi
        echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> $GITHUB_ENV

    - name: Restore Neovim Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/nvim
          ~/.cache/nvim
          ~/.config/nvim/lazy-lock.json
        key: nvim-cache-${{ runner.os }}-${{ hashFiles('.config/nvim/lazy-lock.json', '.config/nvim/init.lua') }}
        restore-keys: |
          nvim-cache-${{ runner.os }}-

    - name: Setup Neovim
      run: |
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        brew install neovim

        # check neovim installation
        nvim --version || exit 1
        nvim --headless "+checkhealth" +qall || exit 1

        mkdir -p ~/.config
        cp -r ./.config/nvim ~/.config/nvim
        nvim --headless "+checkhealth" +qall || exit 1
